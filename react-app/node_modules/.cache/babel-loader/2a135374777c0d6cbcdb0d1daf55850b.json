{"ast":null,"code":"var _jsxFileName = \"/Users/taylantezel/Desktop/ReactDerslerim/patika-react-odev-3/weather-forecast/src/context/CitiesContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from \"react\"; // create context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CitiesContext = /*#__PURE__*/createContext();\n\nconst CitiesContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [city, setCity] = useState(null);\n  useEffect(() => {\n    const fetchCities = () => {\n      fetch(\"https://randomuser.me/api/\").then(response => response.json()).then(result => setCity(result.results[0])).catch(error => console.log(\"An error occured\"));\n    };\n\n    fetchCities();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CitiesContext.Provider, {\n    value: city,\n    children: [children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CitiesContextProvider, \"6YhbfY1s8phr8M4K6i66yCdw9Bo=\");\n\n_c = CitiesContextProvider;\nexport { CitiesContext, CitiesContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"CitiesContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","CitiesContext","CitiesContextProvider","children","city","setCity","fetchCities","fetch","then","response","json","result","results","catch","error","console","log"],"sources":["/Users/taylantezel/Desktop/ReactDerslerim/patika-react-odev-3/weather-forecast/src/context/CitiesContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\n\n// create context\nconst CitiesContext = createContext();\n\nconst CitiesContextProvider = ({ children }) => {\n    const [city, setCity] = useState(null);\n    \n    \n    useEffect(() => {\n        const fetchCities = () => {\n            \n            fetch(\"https://randomuser.me/api/\")\n                .then((response) => response.json())\n                .then((result) => setCity(result.results[0]))\n                .catch((error) => console.log(\"An error occured\"));\n        };\n\n        fetchCities();\n    }, []);\n\n    return (\n        <CitiesContext.Provider value={city}>{children} </CitiesContext.Provider>\n    );\n};\n\nexport { CitiesContext, CitiesContextProvider };"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D,C,CAEA;;;AACA,MAAMC,aAAa,gBAAGH,aAAa,EAAnC;;AAEA,MAAMI,qBAAqB,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC5C,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;EAGAC,SAAS,CAAC,MAAM;IACZ,MAAMM,WAAW,GAAG,MAAM;MAEtBC,KAAK,CAAC,4BAAD,CAAL,CACKC,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADxB,EAEKF,IAFL,CAEWG,MAAD,IAAYN,OAAO,CAACM,MAAM,CAACC,OAAP,CAAe,CAAf,CAAD,CAF7B,EAGKC,KAHL,CAGYC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAHtB;IAIH,CAND;;IAQAV,WAAW;EACd,CAVQ,EAUN,EAVM,CAAT;EAYA,oBACI,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAEF,IAA/B;IAAA,WAAsCD,QAAtC;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH,CAnBD;;GAAMD,qB;;KAAAA,qB;AAqBN,SAASD,aAAT,EAAwBC,qBAAxB"},"metadata":{},"sourceType":"module"}