{"ast":null,"code":"var _jsxFileName = \"/Users/taylantezel/Desktop/ReactDerslerim/patika-react-odev-3/weather-forecast/src/context/WeatherForecastContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherForecastContext = /*#__PURE__*/createContext();\nexport const WeatherForecastProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [cityId, setCityId] = useState(localStorage.getItem(data));\n  useEffect(() => {\n    async function getAllCity() {\n      const {\n        data\n      } = await axios.get(`http://localhost:3000/cities?id=${{\n        cityId\n      }}`);\n      localStorage.setItem(\"city\", data);\n    }\n\n    getAllCity();\n  }, [cityId]);\n  const values = {\n    cityId\n  };\n  return /*#__PURE__*/_jsxDEV(WeatherForecastContext.Provider, {\n    value: values,\n    children: [children, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(WeatherForecastProvider, \"SvTomy9h1cWo3EYZXi/NBO6BI2c=\");\n\n_c = WeatherForecastProvider;\nexport const useWeathers = () => {\n  _s2();\n\n  return useContext(WeatherForecastContext);\n};\n\n_s2(useWeathers, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecastProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","axios","WeatherForecastContext","WeatherForecastProvider","children","cityId","setCityId","localStorage","getItem","data","getAllCity","get","setItem","values","useWeathers"],"sources":["/Users/taylantezel/Desktop/ReactDerslerim/patika-react-odev-3/weather-forecast/src/context/WeatherForecastContext.js"],"sourcesContent":["import {createContext, useContext, useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nconst WeatherForecastContext = createContext();\n\nexport const WeatherForecastProvider = ({children}) => {\n    const [cityId, setCityId] = useState(localStorage.getItem(data) );\n\n    useEffect(() => {\n        async function getAllCity() {\n            const {data} = await axios.get(`http://localhost:3000/cities?id=${{cityId}}`);\n            localStorage.setItem(\"city\", data);\n        }\n        getAllCity();\n    }, [cityId]);\n    \n\n    const values = {\n        cityId\n    }\n\n    return (\n        <WeatherForecastContext.Provider value={values}>{children} </WeatherForecastContext.Provider>\n    );\n\n};\n\nexport const useWeathers = () => useContext(WeatherForecastContext);"],"mappings":";;;;AAAA,SAAQA,aAAR,EAAuBC,UAAvB,EAAmCC,SAAnC,EAA8CC,QAA9C,QAA6D,OAA7D;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,sBAAsB,gBAAGL,aAAa,EAA5C;AAEA,OAAO,MAAMM,uBAAuB,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EACnD,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAACO,YAAY,CAACC,OAAb,CAAqBC,IAArB,CAAD,CAApC;EAEAV,SAAS,CAAC,MAAM;IACZ,eAAeW,UAAf,GAA4B;MACxB,MAAM;QAACD;MAAD,IAAS,MAAMR,KAAK,CAACU,GAAN,CAAW,mCAAkC;QAACN;MAAD,CAAS,EAAtD,CAArB;MACAE,YAAY,CAACK,OAAb,CAAqB,MAArB,EAA6BH,IAA7B;IACH;;IACDC,UAAU;EACb,CANQ,EAMN,CAACL,MAAD,CANM,CAAT;EASA,MAAMQ,MAAM,GAAG;IACXR;EADW,CAAf;EAIA,oBACI,QAAC,sBAAD,CAAwB,QAAxB;IAAiC,KAAK,EAAEQ,MAAxC;IAAA,WAAiDT,QAAjD;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAIH,CApBM;;GAAMD,uB;;KAAAA,uB;AAsBb,OAAO,MAAMW,WAAW,GAAG;EAAA;;EAAA,OAAMhB,UAAU,CAACI,sBAAD,CAAhB;AAAA,CAApB;;IAAMY,W"},"metadata":{},"sourceType":"module"}